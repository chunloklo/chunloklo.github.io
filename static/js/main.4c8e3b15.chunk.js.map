{"version":3,"sources":["img/portraitCropped.jpg","img/softBody.png","img/hrlOlPortrait.PNG","img/acaPortrait.png","img/unfilteredPortrait.png","logo.svg","StyledText.js","ResearchView.js","MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledText","style","this","props","children","React","Component","ResearchView","imageStyle","width","height","marginRight","cardStyle","display","marginTop","titleStyle","fontWeight","fontSize","textAlign","contributorStyle","descriptionStyle","src","softBody","alt","href","target","hrlOlPortrait","acaPortrait","unfilteredPortrait","MainScreen","document","title","borderRadius","margin","portraitCropped","App","className","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c8e3b15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portraitCropped.501612e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/softBody.f899d35a.png\";","module.exports = __webpack_public_path__ + \"static/media/hrlOlPortrait.9f50522f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/acaPortrait.3f686183.png\";","module.exports = __webpack_public_path__ + \"static/media/unfilteredPortrait.2a63b7e4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {Component} from \"react\";\r\nimport portraitCropped from \"./img/portraitCropped.jpg\";\r\nclass StyledText extends React.Component {\r\n  render() {\r\n    const font = {\r\n      fontFamily: \"Montserrat\",\r\n    };\r\n    return (<div style={font, this.props.style}>{this.props.children}</div>\r\n    );\r\n  }\r\n}\r\nexport default StyledText;\r\n","import React, {Component} from \"react\";\r\nimport StyledText from \"./StyledText.js\";\r\nimport softBody from \"./img/softBody.png\";\r\nimport hrlOlPortrait from \"./img/hrlOlPortrait.PNG\";\r\nimport acaPortrait from \"./img/acaPortrait.png\";\r\nimport unfilteredPortrait from \"./img/unfilteredPortrait.png\";\r\nclass ResearchView extends React.Component {\r\n  render() {\r\n    const imageStyle = {\r\n      width: 150,\r\n      height: \"auto\",\r\n      marginRight: 40\r\n    };\r\n\r\n    const cardStyle = {display: \"flex\", marginTop: 40};\r\n\r\n    const titleStyle = {fontWeight: 300, fontSize: 28, textAlign: \"left\"};\r\n    const contributorStyle = {fontWeight: 100, fontSize: 18, textAlign: \"left\"};\r\n    const descriptionStyle = {fontWeight: 100, fontSize: 18, textAlign: \"left\"};\r\n    const linkStyle = {\r\n      fontWeight: 100,\r\n      fontSize: 18,\r\n      textAlign: \"left\",\r\n      marginTop: 10\r\n    };\r\n\r\n    function renderSimulation() {\r\n      const description =\r\n        \"Explores the use of covariance matrix adaptation evolution strategy to find control policies for soft bodied creatures with various body plans and muscle actuation patterns\";\r\n      return (\r\n        <div style={cardStyle}>\r\n          <img style={imageStyle} src={softBody} alt=\"portrait\" />\r\n          <div>\r\n            <StyledText\r\n              style={titleStyle}\r\n            >\r\n              Simulation and Control of Soft-Bodied Creatures\r\n            </StyledText>\r\n            <StyledText\r\n              style={contributorStyle}\r\n            >\r\n              <i>Chunlok Lo, Greg Turk</i>\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={descriptionStyle}\r\n            >\r\n              {description}\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={{\r\n                fontWeight: 100,\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                marginTop: 10\r\n              }}\r\n            >\r\n              <a\r\n                href=\"https://chunloklo.github.io/softbody_gait_discovery/\"\r\n                target=\"_blank\"\r\n              >\r\n                Project Webpage\r\n              </a>\r\n            </StyledText>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderHRL() {\r\n      const description =\r\n        \"Explored combining hierarchical reinforcement learning with option learning methdologies to improve exploration\";\r\n\r\n      return (\r\n        <div style={cardStyle}>\r\n          <img style={imageStyle} src={hrlOlPortrait} alt=\"portrait\" />\r\n          <div>\r\n            <StyledText\r\n              style={titleStyle}\r\n            >\r\n              Hierarchical Reinforcement Learning with Option Learning\r\n            </StyledText>\r\n            <StyledText\r\n              style={contributorStyle}\r\n            >\r\n              <i>Chunlok Lo, Eric Liu, Matthew Gombolay</i>\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={descriptionStyle}\r\n            >\r\n              {description}\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={{\r\n                fontWeight: 100,\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                marginTop: 10\r\n              }}\r\n            >\r\n              <a href=\"http://chunloklo.github.io/pdf/hrl-ol-presentation.pdf\">\r\n                Presentation\r\n              </a>\r\n            </StyledText>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderACA() {\r\n      const title = \"Agile Communication Architectures\";\r\n      const contributor = \"Georgia Tech Vertically Integrated Project Team\";\r\n      const description =\r\n        \"Apply machine learning to cognitive radios to exploit the specturm\";\r\n\r\n      return (\r\n        <div style={cardStyle}>\r\n          <img style={imageStyle} src={acaPortrait} alt=\"portrait\" />\r\n          <div>\r\n            <StyledText\r\n              style={titleStyle}\r\n            >\r\n              {title}\r\n            </StyledText>\r\n            <StyledText\r\n              style={contributorStyle}\r\n            >\r\n              <i>{contributor}</i>\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={descriptionStyle}\r\n            >\r\n              {description}\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={{\r\n                fontWeight: 100,\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                marginTop: 10\r\n              }}\r\n            >\r\n              <a\r\n                href=\"https://www.vip.gatech.edu/teams/agile-communication-architectures\"\r\n                target=\"_blank\"\r\n              >\r\n                Team Page\r\n              </a>\r\n            </StyledText>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderUnfiltered() {\r\n      const title =\r\n        \"Unfiltered: Automatic Identification and Inversion of Social Media Photography Filters\";\r\n      const contributor = \"Chunlok Lo, Mert Dumenci, Cem Gokumen, Joel Ye\";\r\n      const description =\r\n        \"Apply machine learning to inverse common instagram filters. Done as part of CS4476 Computer Vision at Georgia Tech\";\r\n\r\n      return (\r\n        <div style={cardStyle}>\r\n          <img style={imageStyle} src={unfilteredPortrait} alt=\"portrait\" />\r\n          <div>\r\n            <StyledText\r\n              style={titleStyle}\r\n            >\r\n              {title}\r\n            </StyledText>\r\n            <StyledText\r\n              style={contributorStyle}\r\n            >\r\n              <i>{contributor}</i>\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={descriptionStyle}\r\n            >\r\n              {description}\r\n            </StyledText>\r\n\r\n            <StyledText\r\n              style={{\r\n                fontWeight: 100,\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                marginTop: 10\r\n              }}\r\n            >\r\n              <a href=\"https://team-vision2020.github.io/\" target=\"_blank\">\r\n                Project Page\r\n              </a>\r\n            </StyledText>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={{marginTop: 50}}>\r\n        <div>\r\n          <StyledText\r\n            style={{fontWeight: 400, fontSize: 32, textAlign: \"left\"}}\r\n          >\r\n            Research\r\n          </StyledText>\r\n        </div>\r\n\r\n        {renderSimulation()}\r\n        {renderHRL()}\r\n        {renderACA()}\r\n        {renderUnfiltered()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ResearchView;\r\n","import React, {Component} from \"react\";\r\nimport portraitCropped from \"./img/portraitCropped.jpg\";\r\nimport ResearchView from \"./ResearchView\";\r\nimport StyledText from \"./StyledText.js\";\r\n\r\nclass MainScreen extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"Chunlok Lo\";\r\n  }\r\n\r\n  render() {\r\n    const width = 250;\r\n\r\n    const imageStyle = {\r\n      height: width,\r\n      borderRadius: width / 2\r\n    };\r\n\r\n    const boxStyle = {\r\n      marginRight: 100\r\n    };\r\n\r\n    var name = \"Chunlok Lo\";\r\n    var intro =\r\n      \"I am currently an undergraduate student in Computer Science at Georgia Tech. My current research interests are reinforcement learning, computer animation, robotics, and game theory. I've also interned at Facebook, Riot Games, Ab Initio, and Home Depot\";\r\n    return (\r\n      <div style={{margin: \"10%\"}}>\r\n        <div style={{display: \"flex\"}}>\r\n          <div style={boxStyle}>\r\n            <StyledText style={{fontWeight: 400, fontSize: 48, margin: 10}}>\r\n              {name}\r\n            </StyledText>\r\n            <StyledText\r\n              style={{fontWeight: 300, fontSize: 18, textAlign: \"left\"}}\r\n            >\r\n              {intro}\r\n            </StyledText>\r\n            <StyledText style={{fontWeight: 300, fontSize: 18, marginTop: 10}}>\r\n              Email: chunlok.lo1@gmail.com\r\n            </StyledText>\r\n            <StyledText style={{fontWeight: 300, fontSize: 18}}>\r\n              <a href=\"http://chunloklo.github.io/pdf/cv.pdf\">CV</a> /{\" \"}\r\n              <a href=\"http://github.com/chunloklo/\" target=\"_blank\">\r\n                Github\r\n              </a>{\" \"}\r\n              /{\" \"}\r\n              <a href=\"https://www.linkedin.com/in/chunloklo/\" target=\"_blank\">\r\n                LinkedIn{\" \"}\r\n              </a>\r\n            </StyledText>\r\n          </div>\r\n          <img style={imageStyle} src={portraitCropped} alt=\"portrait\" />\r\n        </div>\r\n        <ResearchView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainScreen;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainScreen from './MainScreen'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainScreen />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}